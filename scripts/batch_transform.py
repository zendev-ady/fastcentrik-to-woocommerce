#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
D√°vkov√© zpracov√°n√≠ v√≠ce FastCentrik soubor≈Ø
"""

import sys
import os
import glob
from pathlib import Path
import logging

# Add the project root to the Python path
sys.path.insert(0, str(Path(__file__).parent.parent))

from src.fastcentrik_woocommerce.loaders.data_loader import DataLoader
from src.fastcentrik_woocommerce.core.transformer import DataTransformer
from src.fastcentrik_woocommerce.exporters.csv_exporter import CsvExporter

def batch_transform(input_dir: str, output_base_dir: str):
    """D√°vkov√© zpracov√°n√≠ v≈°ech Excel soubor≈Ø ve slo≈æce"""
    
    logger = logging.getLogger(__name__)
    input_path = Path(input_dir)
    
    # Najdeme v≈°echny Excel soubory
    excel_files = list(input_path.glob("*.xls")) + list(input_path.glob("*.xlsx"))
    
    if not excel_files:
        print(f"‚ùå Ve slo≈æce {input_dir} nejsou ≈æ√°dn√© Excel soubory")
        return
    
    print(f"üìÅ Nalezeno {len(excel_files)} Excel soubor≈Ø")
    
    successful = 0
    failed = 0
    
    for excel_file in excel_files:
        try:
            print(f"\nüîÑ Zpracov√°v√°m: {excel_file.name}")
            
            # Vytvo≈ôen√≠ v√Ωstupn√≠ slo≈æky pro ka≈æd√Ω soubor
            file_output_dir = Path(output_base_dir) / excel_file.stem
            file_output_dir.mkdir(parents=True, exist_ok=True)
            
            # Transformace
            loader = DataLoader(str(excel_file))
            data = loader.load_data()
            
            transformer = DataTransformer(
                products_df=data['products'],
                categories_df=data['categories']
            )
            products, categories = transformer.run_transformation()
            
            exporter = CsvExporter()
            exporter.export_products(products, str(file_output_dir))
            exporter.export_categories(categories, str(file_output_dir))
            
            print(f"‚úÖ {excel_file.name} - dokonƒçeno")
            successful += 1
            
        except Exception as e:
            print(f"‚ùå {excel_file.name} - chyba: {e}")
            logger.error(f"Chyba p≈ôi zpracov√°n√≠ {excel_file}: {e}")
            failed += 1
    
    print(f"\nüìä SOUHRN D√ÅVKOV√âHO ZPRACOV√ÅN√ç:")
    print(f"‚úÖ √öspƒõ≈°nƒõ zpracov√°no: {successful}")
    print(f"‚ùå Chyby: {failed}")
    print(f"üìÅ V√Ωstupn√≠ soubory: {output_base_dir}")

if __name__ == "__main__":
    import argparse
    
    parser = argparse.ArgumentParser(description='D√°vkov√© zpracov√°n√≠ FastCentrik soubor≈Ø')
    parser.add_argument('input_dir', help='Slo≈æka se vstupn√≠mi Excel soubory')
    parser.add_argument('--output', '-o', default='./batch_output/', 
                       help='Z√°kladn√≠ v√Ωstupn√≠ slo≈æka')
    
    args = parser.parse_args()
    
    logging.basicConfig(level=logging.INFO)
    batch_transform(args.input_dir, args.output)